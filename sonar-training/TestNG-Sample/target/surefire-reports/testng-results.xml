<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="5" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="1066" started-at="2013-09-03T09:52:25Z" finished-at="2013-09-03T09:52:26Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1066" started-at="2013-09-03T09:52:25Z" finished-at="2013-09-03T09:52:26Z">
      <class name="sample.UtilsNGTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="setUpClass" is-config="true" duration-ms="15" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="setUp" is-config="true" duration-ms="1" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkExpectedException()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="checkExpectedException" duration-ms="26" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[zero or negative parameter (-5)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: zero or negative parameter (-5)
	at sample.Utils.computeFactorial(Utils.java:30)
	at sample.UtilsNGTest.checkExpectedException(UtilsNGTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExpectedException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="tearDown" is-config="true" duration-ms="1" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="setUp" is-config="true" duration-ms="1" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="helloWorldCheck()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="helloWorldCheck" duration-ms="2" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- helloWorldCheck -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="setUp" is-config="true" duration-ms="0" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testWithTimeout()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="testWithTimeout" duration-ms="984" started-at="2013-09-03T17:52:25Z" finished-at="2013-09-03T17:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithTimeout -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="tearDown" is-config="true" duration-ms="1" started-at="2013-09-03T17:52:26Z" finished-at="2013-09-03T17:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:sample.UtilsNGTest@4d28a245]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2013-09-03T17:52:26Z" finished-at="2013-09-03T17:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- sample.UtilsNGTest -->
      <class name="sample.VectorsNGTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:sample.VectorsNGTest@606145c5]" name="setUpClass" is-config="true" duration-ms="0" started-at="2013-09-03T17:52:26Z" finished-at="2013-09-03T17:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="ScalarMultiplicationCheck()[pri:0, instance:sample.VectorsNGTest@606145c5]" name="ScalarMultiplicationCheck" duration-ms="13" started-at="2013-09-03T17:52:26Z" finished-at="2013-09-03T17:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScalarMultiplicationCheck -->
        <test-method status="PASS" signature="equalsCheck()[pri:0, instance:sample.VectorsNGTest@606145c5]" name="equalsCheck" duration-ms="0" started-at="2013-09-03T17:52:26Z" finished-at="2013-09-03T17:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsCheck -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:sample.VectorsNGTest@606145c5]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2013-09-03T17:52:26Z" finished-at="2013-09-03T17:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- sample.VectorsNGTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
