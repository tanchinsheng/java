What will be the output of compiling and running the following program:

It will print Hello.//true

There is no way to access any VALUE in TestClass.

The code will work fine only if VALUE is removed from one of the interfaces.
//It works even now.

It will not compile.

None of the above.

Explanation
Having ambiguous fields does not cause any problems but referring to such
fields in an ambiguous way will cause a compile time error.
So you cannot call : System.out.println(VALUE) as it will be ambiguous.   
as there is no ambiguity in referring the field: TestClass tc = new TestClass();
System.out.println(( ( I1) tc).VALUE);
So, any of the VALUE fields can be accessed by casting.
