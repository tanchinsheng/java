Use ArrayIndexOutOfBoundsException for the catch argument.

Use ArrayIndexOutOfBoundsException for the catch argument and add code in the catch block to log or print the exception. //true
//Empty catch blocks are a bad practice because at run time, if the exception is thrown,
the program will not show any sign of the exception and may produce bad results that will be hard to debug.
Therefore, it is a good practice to at least print out the exception
if you don't want to do any thing upon encountering an exception.

Add code in the catch block to handle the exception.
//There are a few questions in the exam that are difficult to interpret.
In this case, for example, it is not clear what is meant by handling the exception.
The catch block itself is meant to handle the exception.
Once you get the exception, you can do what ever is required in the catch block.

Use flow control to terminate the loop. //true
It is considered a bad practice to use exceptions to control the flow of execution.
In this case, values[i] will throw an ArrayIndexOutOfBoundsException once it goes beyond the array length and the
programmer is using this fact to control the loop.
Instead of doing this,  the programmer should use something like: for(int i=0; i<values.length; i++)
to control the execution of the loop.
