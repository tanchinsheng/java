Which of these combinations of switch expression types and case label
value types are legal within a switch statement?

switch expression of type int and case label value of type char.//tru
//Note that the following is invalid though because a char cannot be
assigned to an Integer: Integer x = 1;  // int x = 1; is valid.
switch(x){    
    case 'a' : System.out.println("a");
}

switch expression of type float and case label value of type int.

switch expression of type byte and case label value of type float.

switch expression of type char and case label value of type byte.
//This will not work in all cases because a byte may have negative values
which cannot be assigned to a char. For example, char ch = -1; does not compile.
Therefore, the following does not compile either:         

char ch = 'x';        
switch(ch){           
    case -1 : System.out.println("-1"); break;
    // This will not compile : "possible loss of precision"           
    default:        System.out.println("default");            
}

switch expression of type boolean and case label value of type boolean.

Explanation
You should remember the following rules for a switch statement:
1. Only String, byte, char, short, int, and enum values can be used
as types of a switch variable. (String is allowed since Java 7.)
Wrapper classes Byte, Character, Short, and Integer are allowed as well.

2. The case constants must be assignable to the switch variable.
For example, if your switch variable is of class String,
your case labels must use Strings as well.

3. The switch variable must be big enough to hold all the case constants.
For example, if the switch variable is of type char, then none of the
case constants can be greater than 65535 because a char's range is from 0 to 65535.
Similarly, the following will not compile because 300 cannot be assigned to 'by',
which can only hold values from -128 to 127.

byte by = 10;
switch(by){     
    case 200 :  //some code;     
    case 300 :  //some code;
}

4.  All case labels should be COMPILE TIME CONSTANTS.
5. No two of the case constant expressions associated with a switch
statement may have the same value.

6. At most one default label may be associated with the same switch statement.

