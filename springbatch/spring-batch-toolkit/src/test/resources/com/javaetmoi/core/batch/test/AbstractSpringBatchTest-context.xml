<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
 xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:batch="http://www.springframework.org/schema/batch"
  xmlns:c="http://www.springframework.org/schema/c"
  xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        ">

  <!-- Create an in-memory Spring Batch database from the schema included into the spring-batch-core module -->
  <jdbc:embedded-database id="dataSource" type="H2">
    <jdbc:script location="classpath:org/springframework/batch/core/schema-drop-h2.sql" />
    <jdbc:script location="classpath:org/springframework/batch/core/schema-h2.sql" />
  </jdbc:embedded-database>

  <!-- Datasource transaction manager used for the Spring Batch Repository and batch processing -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    p:dataSource-ref="dataSource" />


  <!-- Helps with testing (autowired, injected in the test instance) -->
  <bean class="org.springframework.batch.test.JobLauncherTestUtils" lazy-init="true" />

  <!-- Starts a job execution -->
  <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    <property name="jobRepository" ref="jobRepository" />
  </bean>
  
  <!-- In-memory database repository -->
  <batch:job-repository id="jobRepository" />

</beans>