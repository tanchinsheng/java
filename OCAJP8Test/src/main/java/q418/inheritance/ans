Which of the following are valid declarations inside an interface independent of each other?

default void compute();
//When you mark a method in an interface as default, you are basically trying to provide a default implementation 
of that method so that any class that implements this interface doesn't necessarily have to provide its own implementation. 
Thus, a default method without a method body doesn't make sense. default void compute(){ } would be valid.  
Remember that default keyword can occur for a method only in an interface and NOT in an abstract class.

public void compute(); // True

static void compute(){  //True
    System.out.println("computing..."); 
}
//This is a valid static method in an interface. Note that all members of an interface 
(i.e. fields as well as methods) are always public.

static void compute();
//An interface can have a static method but the method must have a body in that case because a static 
method cannot be abstract.

default static void compute(){    
    System.out.println("computing..."); 
};
//An interface method cannot be default and static at the same time because a default method is always an instance method.