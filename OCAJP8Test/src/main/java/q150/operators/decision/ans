Which of the following will not give any error at compile time and run time?

if (8 == 81) {} //true
//8 == 81 is a valid expression that returns false.

if (x = 3) {} // assume that x is an int
//Because the exp. x = 3 does not return a boolean.

if (true) {} //true

if (bool = false) {}  //assume that bool is declared as a boolean//true
//Because the expression 'bool = false' returns a boolean ( which happens to be false)

if (x == 10 ? true:false) { } // assume that x is an //true

Explanation
All an if(...) needs is a boolean. x = 3 is not valid because the return
value of this expression is 3 which is not a boolean.
