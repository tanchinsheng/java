Which of the following are true regarding overloading of a method?

An overloading method must have a different parameter list and same return type as that of the overloaded method. //Wrong
There is no restriction on the return type. If the parameters are different then the methods are totally different 
(other than the name) so their return types can be anything.

If there is another method with the same name but with a different number of arguments in a class then that 
method can be called as overloaded. // Correct

If there is another method with the same name and same number and type of arguments but with a different return type 
in a class then that method can be called as overloaded. //Wrong
For overloading a method, the "signature" of the overloaded methods must be different. 
In simple terms, a method signature includes method name and the number and type of arguments that it takes. 
So if the parameter list of the two methods with the same name are different either in terms of number or in terms 
of the types of the parameters, then they are overloaded.  

For example: Method m1 is overloaded if you have two methods : void m1(int k); and void m1(double d); 
or if you have: void m1(int k); and void m1(int k, double d);   
Note that return type is not considered a part of the method signature.

An overloaded method means a method with the same name and same number and type of arguments exists in the super class
and sub class. //Wrong
This is called overriding and not overloading.