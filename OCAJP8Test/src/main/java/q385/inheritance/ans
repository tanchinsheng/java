You are modeling a class hierarchy for living things. You have a class LivingThing which has an abstract method reproduce(). 
Now, you want to have 2 concrete subclasses of LivingThing - Plant and Animal. 
Both do reproduce but the mechanisms are different. What would you do?


Overload the reproduce method in Plant and Animal classes

Overload the reproduce method in LivingThing class.

Override the reproduce method in Plant and Animal classes // Correct

Either overload or override reproduce in Plant and Animal classes, it depends on the preference of the designer.

Explanation
This kind of scenario where the subclass HAS the behavior of the base class but implements it in a different way 
is called as overriding. Here, both Plant and Animal reproduce, so they have the behavior of the base class 
but they do it differently, so you have to override the base class method in their code. 

Inheritance is always involved in overriding. Overloading is quite different, 
when you want to do similar (not same) things but the inputs are different then you overload a method. 
For example, you may have two add methods: 

add(int i1, int i2) and add(ComplexNo c1, ComplexNo c2). 
Here both are doing similar things (that is why both are named as add) but inputs are different. 
Both are two entirely different methods and there is no inheritance involved.