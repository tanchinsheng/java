The class will not compile because you cannot override toString() method.
//You sure can. toString() is defined as public and non-final method in Object class.

The class will not compile as si being static, this.si is not a valid statement.
//static member can be accessed by static and non-static methods both. Non-static can only be accessed by non-static.

It will print TestClass@nnnnnnnn, where nnnnnnn is the hash code of the TestClass object referred to by 'this'.
//It would have been correct if toString() were not overridden. This is the behavior of the toString() provided by Object class.

It will print TestClass.si = 10 // true

None of the above.

Explanation
The toString method for class Object returns a String consisting of the name of the class of which the object is an instance, 
the at-sign character '@', and the unsigned hexadecimal representation of the hash code of the object. 
In other words, this method returns a string equal to the value of: 
getClass().getName() + '@' + Integer.toHexString(hashCode())