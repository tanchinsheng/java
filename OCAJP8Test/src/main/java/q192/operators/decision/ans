What will happen when the following program is compiled and run?

It will print EMPTY.

It will print NOT EMPTY.

It will throw NullPointerException.//true
//Because the first part of the expression (s.length() == 0) is trying to call
a method on s, which is null. The check s == null should be done before
calling a method on the reference.

It will print EMPTY if || is replaced with |.
//In this case, replacing || with | will not make any difference
because s.length() will anyway be called before checking whether s is null or not.
The right expression would be: if( s == null || s.length() == 0) { ... }
In this case, || being a short circuit expression, s.length() == 0
will not be called if s == null returns true.
Hence, no NullPointerException will be thrown.
